version: "2.4"

services:
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=${ELASTIC_SEARCH_PASSWORD}
      - xpack.security.enabled=${ELASTIC_SECURITY_ENABLED-false}
    healthcheck:
      test: [ "CMD", "curl", "-f", "localhost:9200/_cluster/health", "--header",  "Authorization: Basic ZWxhc3RpYzpEa0llZFBQU0Ni" ]
      interval: 30s
      timeout: 10s
      retries: 4
  registry:
    image: tejashjl/sunbird-rc-core:v0.0.13-7
    volumes:
      - ${PWD}/${SCHEMA_DIR-schemas}:/home/sunbirdrc/config/public/_schemas
    environment:
      - connectionInfo_uri=jdbc:postgresql://172.17.0.1:5432/sunbirdmapperdb
      - connectionInfo_username=sunbirduser
      - connectionInfo_password=1234
      - elastic_search_connection_url=es:9200
      - elastic_search_auth_enabled=${ELASTIC_SECURITY_ENABLED-false}
      - elastic_search_username=${ELASTIC_SEARCH_USERNAME-elastic}
      - elastic_search_password=${ELASTIC_SEARCH_PASSWORD}
      - search_providerName=${SEARCH_PROVIDER_NAME-dev.sunbirdrc.registry.service.ElasticSearchService}
      - registry_base_apis_enable=false
      - logging.level.root=INFO
      - authentication_enabled=false
      - webhook_enabled=false
      - webhook_url=http://localhost:5001/api/v1/callback
      - manager_type=${MANAGER_TYPE-DefinitionsManager}
      - claims_enabled=${CLAIMS_ENABLED-false}
      - signature_enabled=${CLAIMS_ENABLED-false}
      - certificate_enabled=${CERTIFICATE_ENABLED-false}
      - filestorage_enabled=${FILESSTORAGE_ENABLED-false}
      - async_enabled=${ASYNC_ENABLED-false}
      - notification_async_enabled=${NOTIFICATION_ASYNC_ENABLED-false}
      - notification_enabled=${NOTIFICATION_ENABLED-false}
    depends_on:
      es:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget -nv -t1 --spider http://localhost:8081/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 10
  nginx:
    build: mapper-ui
    volumes:
      - ${PWD}/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8087:80"
    depends_on:
      registry:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "localhost:80" ]
      interval: 30s
      timeout: 10s
      retries: 10
  mapper-service:
    build: services/mapper-service
    environment:
      - REGISTRY_URL=http://registry:8081/
      - CALLBACK_SERVICE_URL=http://callback-service:8765/v0.1.0/mapper/
      - SWAGGER_DEBUG="1"
      - DEBUG="1"
    ports:
      - "8766:8766"
  callback-service:
    build: services/callback-service
    environment:
      - REGISTRY_URL=http://registry:8081/
